package com.example.demo.Service;

import java.util.List;
import java.util.Optional;

import org.hibernate.ObjectNotFoundException;
import org.hibernate.PropertyNotFoundException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.Entity.MyOrder;
import com.example.demo.Repository.OrderRepo;

@Service
public class OrderService {
	
	@Autowired
	private OrderRepo repo;
	
	
	public MyOrder saveMyOrder(MyOrder MyOrder) {
		return repo.save(MyOrder);
	}
	
	
	public List<MyOrder> getAllMyOrders(){
		return repo.findAll();
	}
	
	
	public String deleteMyOrderById(int id) {
		Optional<MyOrder> optionalBook = repo.findById(id);
		if(!optionalBook.isPresent()) {
			throw new ObjectNotFoundException("Object Not Found", optionalBook);
		}
		
		repo.deleteById(id);
		return "MyOrder with id "+id+" is deleted successfully";
	}
	
	
	public MyOrder updateMyOrder(int id, int quantity) {
		Optional<MyOrder> optionalBook = repo.findById(id);
		if(!optionalBook.isPresent()) {
			throw new ObjectNotFoundException("Object Not Found", optionalBook);
		}
		
		MyOrder existingBook = MyOrder.builder()
				.quantity(quantity).build();
		return repo.save(existingBook);
	}




}
